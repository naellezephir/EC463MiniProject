-------------------------------------------------------------
V 0.2 SW MINIPROJECT -- 9/19/18
CASEY KUROSAWA
NAELLE ZEPHIR
-------------------------------------------------------------
-INTRO-
A SYSTEM TO COLLECT AND STORE TEMPERATURE AND HUMIDITY DATA ABOUT A ROOM.  THE SYSTEM USES A DJANGO FRONT-END WEB INTERFACE WITH AUTHENTICATION PLUGIN TO IDENTIFY USERS AND PROTECT USER DATA.  THE INTERFACE IS UPLOADED TO AMAZON WEB SERVICES (AWS) AND USES AWS MYSQL DATABASES TO STORE LOGIN INFORMATION AND ROOM DATA.  ONE DATABASE STORES USER LOGIN DETAILS AND ONE STORES DATA COLLECTED FROM THE 'ROOMS'.  THE LOGIN DATABASE IS QUERIED BY THE FRONT-END SYSTEM FOR AUTHENTICATION, WHICH IS THEN USED TO IDENTIFY WHAT DATA THE USER IS ALLOWED TO HAVE ACCESS TO.  THIS BECOMES MORE IMPORTANT WHEN DISCUSSING HOW DATA IS RETRIEVED BY THE FRONT-END TO DISPLAY ROOM DATA.

THE ROOMS THEMSELVES ARE SIMULATED WITH A PYTHON SCRIPT THAT GENERATES RANDOM VALUES, THEN SERIALIZES THE INFORMATION INTO A JSON FORMAT WHICH IS TRANSMITTED OVER A PYTHON SOCKET AND STORED TO THE AWS ROOM DATA DATABASE. THE FRONTEND HAS ACCESS TO THIS DATABASE, AND WHEN A USER IS LOGGED IN, QUERIES DATA TAGGED WITH HIS/HER USERNAME.  THE DATA IS RETURNED WITH THE UNIT ID, TIMESTAMP, TYPE, AND VALUE, AND HAS NO RESTRICTIONS ON THE NUMBER OF DISPARATE UNITS THAT CAN BE IDENTIFIED TO A USER.

SEE IMG1.PDF FOR DIAGRAM OF SYSTEM INTERACTION

-TECH AND JUSTIFICATIONS-
DJANGO -> WE WANTED TO DEVELOP A WEB INTERFACE
PYTHON -> PYTHON HAS A SIMPLE SOCKET AND DATABASE INTERFACE THAT IS EASY TO SET UP.  IT ALSO DOES NOT REQUIRE COMPILE TIME, SIGNIFICANTLY SPEEDING UP THE DEVELOPMENT PROCESS
AMAZON WEB SERVICES -> AWS IS AN INDUSTRY STANDARD FOR CLOUD COMPUTING AND HAS SIMPLE AND INTUITIVE CONSOLE SYSTEM WHILE ALSO USING A ROBUST COMMAND LINE INTERFACE.  WE USED ELASTIC BEANSTALK AND RELATIONAL DATABASE SERVICES FROM AWS.  ELASTIC BEANSTALK HAS DJANGO INTEGRATION.  CLOUD COMPUTING WAS REQUESTED BY CLIENT.
MYSQL -> INDUSTRY STANDARD W/ SIMPLE PYTHON INTERFACE

-VERSION CONTROL-
GIT VIA GITHUB AS A REMOTE SOURCE.  GIT REQUESTED BY CLIENT

-QUANTITATIVE MEASUREMENTS-
QUANTITATIVE PERFORMANCE MEASUREMENTS ARE POSSIBLE AND MONITORED BY AWS, BUT UNNECESSARY AS SCOPE OF PROJECT IS TOO SMALL TO MAKE MEASURABLE PERFORMANCE INCREASES
ACCURACY OF RESULTS ARE COMPARED W/ FILES STORED LOCALLY ON COMPUTER SIMULATING THE ROOM MODULES.

--OLD README BELOW--

-------------------------------------------------------------
V 0.1 SW MINIPROJECT -- 9/9/18
CASEY KUROSAWA
NAELLE ZEPHIR
-------------------------------------------------------------

OVERVIEW

 - DESIGN SYSTEM THAT COLLECTS AND STORES TEMPERATURE AND HUMIDITY DATA

 - REQUIRED FEATURES:
 	- AUTHENTICATION
 	- CLOUD STORAGE
 	- MULTIPLE USERS (SIMULTANEOUS ACCESS?)
 	- MULTIPLE STATS PER USER

 - 5 MODULES
 	- MAIN INTERFACE
 	- AUTHENTICATION
 	- CLOUD DATABASE
 	- TEMPERATURE MODULE
 	- HUMIDITY MODULE

TEMP MODULE
-------------------------------------------------------------
TEMPERATURE CONSIDERATIONS
HIGHEST RECORDED AIR TEMPERATURE -> 134F
LOWEST RECORDED AIR TEMPERATURE -> -128.6F
-------------------------------------------------------------

HUMID MODULE
-------------------------------------------------------------
HUMIDITY DATA - ABSOLUTE, RELATIVE OR SPECIFIC
RELATIVE HUMIDITY : 0% - 100% (1% IS LOWEST RECORDED ON EARTH), OVERSATURATION POSSIBLE IN HIGH ATMOSPHERE

DEW POINT
HIGHEST RECORDED DEW POINT - 95F
LOWEST ???
-------------------------------------------------------------

TECH
-------------------------------------------------------------
CLOUD SERVICES : AMAZON WEB SERVICES, MICROSOFT AZURE, GOOGLE CLOUD, ?ORACLE DATABASES?
      -FIRST 3 OFFER FREE TRIALS
NETWORK COMMUNICATION : JSON (?BSON?), XML, PLAINTEXT
LOGIN SERVICES : GOOGLE, FACEBOOK, SSH, OTHER?
FRONTEND : TERMINAL?, PYTHON
-------------------------------------------------------------

METRICS
-------------------------------------------------------------
???
COMPARE DATA SENT W/ DATA OBSERVED?
-------------------------------------------------------------

SENSOR SIM
-------------------------------------------------------------
MININET W/ PERIODIC PINGS
UPLOAD RANDOM DATASHEET
-------------------------------------------------------------
